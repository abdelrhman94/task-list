{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/abdelrhman/projects/task-list/src/pages/users/index.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport UserCard from \"../../components/UserCard\";\n\nconst UsersPage = (_ref) => {\n  let {\n    data\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"data\"]);\n\n  const {\n    0: users,\n    1: setUsers\n  } = useState([]);\n  useEffect(() => {\n    if (data && data.data) setUsers(data.data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(UserCard, {\n        user: user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await fetch('https://.../posts');\n  const posts = await res.json(); // Get the paths we want to pre-render based on posts\n\n  const paths = posts.map(post => ({\n    params: {\n      id: post.id\n    }\n  })); // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  const res = await fetch(\"https://reqres.in/api/users?page=1\");\n  const users = await res.json();\n  console.log(context);\n  return {\n    props: {\n      data: users\n    }\n  };\n}\nexport default UsersPage;","map":{"version":3,"sources":["/home/abdelrhman/projects/task-list/src/pages/users/index.js"],"names":["useState","useEffect","List","UserCard","UsersPage","data","props","users","setUsers","map","user","id","getStaticPaths","res","fetch","posts","json","paths","post","params","fallback","getStaticProps","context","console","log"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,MAAMC,SAAS,GAAG,UAAwB;AAAA,MAAvB;AAAEC,IAAAA;AAAF,GAAuB;AAAA,MAAZC,KAAY;;AACxC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,IAAI,IAAIA,IAAI,CAACA,IAAjB,EAAuBG,QAAQ,CAACH,IAAI,CAACA,IAAN,CAAR;AACxB,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAA,gBACGE,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB,SAA2BA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAhBD;;AAkBA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mBAAD,CAAvB;AACA,QAAMC,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAApB,CAHqC,CAKrC;;AACA,QAAMC,KAAK,GAAGF,KAAK,CAACN,GAAN,CAAWS,IAAD,KAAW;AACjCC,IAAAA,MAAM,EAAE;AAAER,MAAAA,EAAE,EAAEO,IAAI,CAACP;AAAX;AADyB,GAAX,CAAV,CAAd,CANqC,CAUrC;AACA;;AACA,SAAO;AAAEM,IAAAA,KAAF;AAASG,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMT,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAAvB;AACA,QAAMP,KAAK,GAAG,MAAMM,GAAG,CAACG,IAAJ,EAApB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AAAED,MAAAA,IAAI,EAAEE;AAAR;AADF,GAAP;AAGD;AACD,eAAeH,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport List from \"@material-ui/core/List\";\n\nimport UserCard from \"../../components/UserCard\";\n\nconst UsersPage = ({ data, ...props }) => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    if (data && data.data) setUsers(data.data);\n  }, [data]);\n\n  return (\n    <div>\n      <List>\n        {users.map((user) => (\n          <UserCard user={user} key={user.id} />\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await fetch('https://.../posts')\n  const posts = await res.json()\n\n  // Get the paths we want to pre-render based on posts\n  const paths = posts.map((post) => ({\n    params: { id: post.id },\n  }))\n\n  // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n  return { paths, fallback: false }\n}\n\nexport async function getStaticProps(context) {\n  const res = await fetch(\"https://reqres.in/api/users?page=1\");\n  const users = await res.json();\n  console.log(context);\n  return {\n    props: { data: users },\n  };\n}\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}